reticulate::repl_python()
TupleExample = (7,8,9) #create sequence of numbers
TupleExample = (7,8,9) #create sequence of numbers
TupleExample
quit
library(reticulate)
#| echo: false
library(reticulate)
reticulate::repl_python()
TupleExample = (7,8,9) #create sequence of numbers
TupleExample
#| echo: false
2 * 2
quit
#| echo: false
library(reticulate)
reticulate::repl_python()
TupleExample = (7,8,9) #create sequence of numbers TupleExample
TupleExample
ListExample = [2,2,5]
ListExample
ListExample = [2,2,5]
ListExample
ListExample +5
ListA = [2,2,5]
ListA
Tup = (5,0,4)
Tup
ListB = list(Tup)
ListB
ListA = [2,2,5]
ListA
Tup = (5,0,4)
Tup
ListB = list(Tup)
ListB
ListA + Tup
ListA = [2,2,5]
ListA
Tup = (5,0,4)
Tup
ListB = list(Tup)
ListB
ListA + ListB
ListA + Tup
ListB.append("Mia")
ListB.append("Mia")
ListB
ListAppend("Mia")
ListA
ListA.append("Mia)
ListA
ListA.append("Mia")
ListA
ListA.insert("crawfish", "tiger")
ListA
ListA.insert(1,"crawfish", "tiger")
ListA
ListA.insert(1,"crawfish")
ListA
ListA.pop(5)
ListA.pop(4)
ListA
ListA.pop(4)
ListA.pop(4)
ListA.pop(4)
ListA.pop(4)
ListA.pop(2)
ListA.pop(2)
ListA
ListA.append("Mia")
ListA
ListA.insert(1,"crawfish")
ListA
ListA.pop(2)
ListA
ListA.remove("crawfish")
ListA.remove("crawfish")
ListA
["five","love","biology"] + ["LSU", "BCM", "LA"]
a = [5,3,1,90,56]
a.sort
a = [5,3,1,90,56]
a.sort ()
a = [5,3,1,90,56]
a
a.sort ()
a
y = [6,"house", "car"]
y.extend([9,0,(32,3)])
y
sequence = ["cccccc", "ttttt", "aaaaa", "ccccc"]
sequence[1:3]
sequence = ["cccccc", "ttttt", "aaaaa", "ccccc"]
sequence[1:4]
sequence = ["cccccc", "ttttt", "aaaaa", "ccccc"]
sequence[0:4]
sequence = ["cccccc", "ttttt", "aaaaa", "ccccc"]
sequence[0:1]
sequence = ["cccccc", "ttttt", "aaaaa", "ccccc"]
sequence[0:2]
Dict1 = {"car":"beetle","model":"volkswagen", "year": "2010"}
Dict1 = {"car":"beetle","model":"volkswagen", "year": "2010"}
Dict1
Dict1[model]
Dict1["model"]
"model" in Dict1 #Check to see if model is in the dictionary
Dict1["state"]: "Louisiana"
Dict1["state"]: "Louisiana"
Dict1
Dict1["state"] = "Louisiana"
Dict1
Dict1["state"] = "Louisiana"
Dict1
Dict1["home"] = "Space"
Dict1
del Dict1["state"]
Dict1.pop[home]
Dict1
Dict1["state"] = "Louisiana"
Dict1
Dict1["home"] = "Space"
Dict1
del Dict1["state"]
Dict1.pop["home"]
Dict1
Dict1["state"] = "Louisiana"
Dict1
Dict1["home"] = "Space"
Dict1
del Dict1["state"]
Dict1.pop["home"]
Dict1
Dict1["state"] = "Louisiana"
Dict1
Dict1["home"] = "Space"
Dict1
del Dict1["state"]
Dict1.pop("home")
Dict1
list(Dict1.keys())
list(Dict1.values())
list(Dict1.items())
set([4,7,8,9])
set([4,7,8,9])
{4,2,3,1}
d = {4,5,6,8}
e = {9,0,3}
d.union(e)
d|e
for index,value in enumerate(d):
print({index}:{value})
for index,value in enumerate(d):
print({index}:{value})
for index,value in enumerate(d):
print(f'{index}:{value}')
for index,value in enumerate(d):
print(f'{index}:{value}')
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
install.packages("reticulate")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
install.packages("png")
reticulate::repl_python()
library(reticulate)
install.packages("reticulate")
reticulate::repl_python()
y
library(reticulate)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
library(reticulate)
reticulate::repl_python()
install.packages("pandas")
reticulate::repl_python()
